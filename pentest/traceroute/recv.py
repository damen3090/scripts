#! /usr/bin/env python
from scapy.all import *

def dec2addr(dec):  
	"将十进制整数IP转换成点分十进制的字符串IP地址"  
	return ".".join([str(dec >> x & 0xff) for x in [24, 16, 8, 0]]) 

def ip2int(ip):
	return reduce(lambda x,y:(x<<8)+y,map(int,ip.split('.')))

def expand(line):
	ip = ip2int(line.split('/')[0])
	offset = 32-int(line.split('/')[1])
	stop = ip >> offset
	result = []
	while (ip>>offset) <= stop:
		result.append(dec2addr(ip))
		ip += 256
	return result

def isExternalIP(ip):
	try:
		ip = ip2int(ip)
	except:
		return False
	net_a = ip2int('10.255.255.255') >> 24
	net_b = ip2int('172.31.255.255') >> 20
	net_c = ip2int('192.168.255.255') >> 16
	return not (ip >> 24 == net_a or ip >>20 == net_b or ip >> 16 == net_c)

result = set()
def arp_monitor_callback(pkt):
	global result
	#print dir(pkt)
	if ICMP in pkt and isExternalIP(pkt[1][0].src):
		#pkt.show()
		print pkt[1][0].src
		result.add(pkt[1][0].src)

f="(icmp and (icmp[0]=3 or icmp[0]=4 or icmp[0]=5 or icmp[0]=11 or icmp[0]=12)) or (tcp and (tcp[13] & 0x16 > 0x10))"

sniff(prn=arp_monitor_callback, filter=f, store=0)


data = '\n'.join(result)

with open('out', 'w') as fw:
	fw.write(data)
